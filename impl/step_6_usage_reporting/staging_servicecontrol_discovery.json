{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "servicecontrol:v1",
  "name": "servicecontrol",
  "canonicalName": "Service Control",
  "version": "v1",
  "revision": "0",
  "title": "Service Control API (Staging)",
  "description": "Provides control plane functionality to managed services, such as logging, monitoring, and status checks.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/service-control/",
  "protocol": "rest",
  "rootUrl": "https://staging-servicecontrol.sandbox.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://staging-servicecontrol.sandbox.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/servicecontrol": {
          "description": "Manage your Google Service Control data"
        }
      }
    }
  },
  "schemas": {
    "AllocateQuotaRequest": {
      "id": "AllocateQuotaRequest",
      "description": "Request message for the AllocateQuota method.",
      "type": "object",
      "properties": {
        "allocateOperation": {
          "description": "Operation that describes the quota allocation.",
          "$ref": "QuotaOperation"
        },
        "serviceConfigId": {
          "description": "Specifies which version of service configuration should be used to process\nthe request. If unspecified or no matching version can be found, the latest\none will be used.",
          "type": "string"
        }
      }
    },
    "QuotaOperation": {
      "id": "QuotaOperation",
      "description": "Represents information regarding a quota operation.",
      "type": "object",
      "properties": {
        "operationId": {
          "description": "Identity of the operation. This is expected to be unique within the scope\nof the service that generated the operation, and guarantees idempotency in\ncase of retries.\n\nUUID version 4 is recommended, though not required. In scenarios where an\noperation is computed from existing information and an idempotent id is\ndesirable for deduplication purpose, UUID version 5 is recommended. See\nRFC 4122 for details.",
          "type": "string"
        },
        "methodName": {
          "description": "Fully qualified name of the API method for which this quota operation is\nrequested. This name is used for matching quota rules or metric rules and\nbilling status rules defined in service configuration.\n\nThis field should not be set if any of the following is true:\n(1) the quota operation is performed on non-API resources.\n(2) quota_metrics is set because the caller is doing quota override.\n\nExample of an RPC method name:\n    google.example.library.v1.LibraryService.CreateShelf",
          "type": "string"
        },
        "consumerId": {
          "description": "Identity of the consumer for whom this quota operation is being performed.\n\nThis can be in one of the following formats:\n  project:<project_id>,\n  project_number:<project_number>,\n  api_key:<api_key>.",
          "type": "string"
        },
        "labels": {
          "description": "Labels describing the operation.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "quotaMetrics": {
          "description": "Represents information about this operation. Each MetricValueSet\ncorresponds to a metric defined in the service configuration.\nThe data type used in the MetricValueSet must agree with\nthe data type specified in the metric definition.\n\nWithin a single operation, it is not allowed to have more than one\nMetricValue instances that have the same metric names and identical\nlabel value combinations. If a request has such duplicated MetricValue\ninstances, the entire request is rejected with\nan invalid argument error.\n\nThis field is mutually exclusive with method_name.",
          "type": "array",
          "items": {
            "$ref": "MetricValueSet"
          }
        },
        "quotaMode": {
          "description": "Quota mode for this operation.",
          "enumDescriptions": [
            "Guard against implicit default. Must not be used.",
            "For AllocateQuota request, allocates quota for the amount specified in\nthe service configuration or specified using the quota metrics. If the\namount is higher than the available quota, allocation error will be\nreturned and no quota will be allocated.",
            "The operation allocates quota for the amount specified in the service\nconfiguration or specified using the quota metrics. If the amount is\nhigher than the available quota, request does not fail but all available\nquota will be allocated.",
            "For AllocateQuota request, only checks if there is enough quota\navailable and does not change the available quota. No lock is placed on\nthe available quota either."
          ],
          "type": "string",
          "enum": [
            "UNSPECIFIED",
            "NORMAL",
            "BEST_EFFORT",
            "CHECK_ONLY"
          ]
        }
      }
    },
    "MetricValueSet": {
      "id": "MetricValueSet",
      "description": "Represents a set of metric values in the same metric.\nEach metric value in the set should have a unique combination of start time,\nend time, and label values.",
      "type": "object",
      "properties": {
        "metricName": {
          "description": "The metric name defined in the service configuration.",
          "type": "string"
        },
        "metricValues": {
          "description": "The values in this metric.",
          "type": "array",
          "items": {
            "$ref": "MetricValue"
          }
        }
      }
    },
    "MetricValue": {
      "id": "MetricValue",
      "description": "Represents a single metric value.",
      "type": "object",
      "properties": {
        "labels": {
          "description": "The labels describing the metric value.\nSee comments on google.api.servicecontrol.v1.Operation.labels for\nthe overriding relationship.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "startTime": {
          "description": "The start of the time period over which this metric value's measurement\napplies. The time period has different semantics for different metric\ntypes (cumulative, delta, and gauge). See the metric definition\ndocumentation in the service configuration for details.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The end of the time period over which this metric value's measurement\napplies.",
          "type": "string",
          "format": "google-datetime"
        },
        "boolValue": {
          "description": "A boolean value.",
          "type": "boolean"
        },
        "int64Value": {
          "description": "A signed 64-bit integer value.",
          "type": "string",
          "format": "int64"
        },
        "doubleValue": {
          "description": "A double precision floating point value.",
          "type": "number",
          "format": "double"
        },
        "stringValue": {
          "description": "A text string value.",
          "type": "string"
        },
        "distributionValue": {
          "description": "A distribution value.",
          "$ref": "Distribution"
        },
        "moneyValue": {
          "description": "A money value.",
          "$ref": "Money"
        }
      }
    },
    "Distribution": {
      "id": "Distribution",
      "description": "Distribution represents a frequency distribution of double-valued sample\npoints. It contains the size of the population of sample points plus\nadditional optional information:\n\n  - the arithmetic mean of the samples\n  - the minimum and maximum of the samples\n  - the sum-squared-deviation of the samples, used to compute variance\n  - a histogram of the values of the sample points",
      "type": "object",
      "properties": {
        "count": {
          "description": "The total number of samples in the distribution. Must be >= 0.",
          "type": "string",
          "format": "int64"
        },
        "mean": {
          "description": "The arithmetic mean of the samples in the distribution. If `count` is\nzero then this field must be zero.",
          "type": "number",
          "format": "double"
        },
        "minimum": {
          "description": "The minimum of the population of values. Ignored if `count` is zero.",
          "type": "number",
          "format": "double"
        },
        "maximum": {
          "description": "The maximum of the population of values. Ignored if `count` is zero.",
          "type": "number",
          "format": "double"
        },
        "sumOfSquaredDeviation": {
          "description": "The sum of squared deviations from the mean:\n  Sum[i=1..count]((x_i - mean)^2)\nwhere each x_i is a sample values. If `count` is zero then this field\nmust be zero, otherwise validation of the request fails.",
          "type": "number",
          "format": "double"
        },
        "bucketCounts": {
          "description": "The number of samples in each histogram bucket. `bucket_counts` are\noptional. If present, they must sum to the `count` value.\n\nThe buckets are defined below in `bucket_option`. There are N buckets.\n`bucket_counts[0]` is the number of samples in the underflow bucket.\n`bucket_counts[1]` to `bucket_counts[N-1]` are the numbers of samples\nin each of the finite buckets. And `bucket_counts[N] is the number\nof samples in the overflow bucket. See the comments of `bucket_option`\nbelow for more details.\n\nAny suffix of trailing zeros may be omitted.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "linearBuckets": {
          "description": "Buckets with constant width.",
          "$ref": "LinearBuckets"
        },
        "exponentialBuckets": {
          "description": "Buckets with exponentially growing width.",
          "$ref": "ExponentialBuckets"
        },
        "explicitBuckets": {
          "description": "Buckets with arbitrary user-provided width.",
          "$ref": "ExplicitBuckets"
        }
      }
    },
    "LinearBuckets": {
      "id": "LinearBuckets",
      "description": "Describing buckets with constant width.",
      "type": "object",
      "properties": {
        "numFiniteBuckets": {
          "description": "The number of finite buckets. With the underflow and overflow buckets,\nthe total number of buckets is `num_finite_buckets` + 2.\nSee comments on `bucket_options` for details.",
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "description": "The i'th linear bucket covers the interval\n  [offset + (i-1) * width, offset + i * width)\nwhere i ranges from 1 to num_finite_buckets, inclusive.\nMust be strictly positive.",
          "type": "number",
          "format": "double"
        },
        "offset": {
          "description": "The i'th linear bucket covers the interval\n  [offset + (i-1) * width, offset + i * width)\nwhere i ranges from 1 to num_finite_buckets, inclusive.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ExponentialBuckets": {
      "id": "ExponentialBuckets",
      "description": "Describing buckets with exponentially growing width.",
      "type": "object",
      "properties": {
        "numFiniteBuckets": {
          "description": "The number of finite buckets. With the underflow and overflow buckets,\nthe total number of buckets is `num_finite_buckets` + 2.\nSee comments on `bucket_options` for details.",
          "type": "integer",
          "format": "int32"
        },
        "growthFactor": {
          "description": "The i'th exponential bucket covers the interval\n  [scale * growth_factor^(i-1), scale * growth_factor^i)\nwhere i ranges from 1 to num_finite_buckets inclusive.\nMust be larger than 1.0.",
          "type": "number",
          "format": "double"
        },
        "scale": {
          "description": "The i'th exponential bucket covers the interval\n  [scale * growth_factor^(i-1), scale * growth_factor^i)\nwhere i ranges from 1 to num_finite_buckets inclusive.\nMust be > 0.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ExplicitBuckets": {
      "id": "ExplicitBuckets",
      "description": "Describing buckets with arbitrary user-provided width.",
      "type": "object",
      "properties": {
        "bounds": {
          "description": "'bound' is a list of strictly increasing boundaries between\nbuckets. Note that a list of length N-1 defines N buckets because\nof fenceposting. See comments on `bucket_options` for details.\n\nThe i'th finite bucket covers the interval\n  [bound[i-1], bound[i])\nwhere i ranges from 1 to bound_size() - 1. Note that there are no\nfinite buckets at all if 'bound' only contains a single element; in\nthat special case the single bound defines the boundary between the\nunderflow and overflow buckets.\n\nbucket number                   lower bound    upper bound\n i == 0 (underflow)              -inf           bound[i]\n 0 < i < bound_size()            bound[i-1]     bound[i]\n i == bound_size() (overflow)    bound[i-1]     +inf",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "Money": {
      "id": "Money",
      "description": "Represents an amount of money with its currency type.",
      "type": "object",
      "properties": {
        "currencyCode": {
          "description": "The 3-letter currency code defined in ISO 4217.",
          "type": "string"
        },
        "units": {
          "description": "The whole units of the amount.\nFor example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "description": "Number of nano (10^-9) units of the amount.\nThe value must be between -999,999,999 and +999,999,999 inclusive.\nIf `units` is positive, `nanos` must be positive or zero.\nIf `units` is zero, `nanos` can be positive, zero, or negative.\nIf `units` is negative, `nanos` must be negative or zero.\nFor example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AllocateQuotaResponse": {
      "id": "AllocateQuotaResponse",
      "description": "Response message for the AllocateQuota method.",
      "type": "object",
      "properties": {
        "operationId": {
          "description": "The same operation_id value used in the AllocateQuotaRequest. Used for\nlogging and diagnostics purposes.",
          "type": "string"
        },
        "allocateErrors": {
          "description": "Indicates the decision of the allocate.",
          "type": "array",
          "items": {
            "$ref": "QuotaError"
          }
        },
        "quotaMetrics": {
          "description": "Quota metrics to indicate the result of allocation. Depending on the\nrequest, one or more of the following metrics will be included:\n\n1. Per quota group or per quota metric incremental usage will be specified\nusing the following delta metric :\n  \"serviceruntime.googleapis.com\/api\/consumer\/quota_used_count\"\n\n2. The quota limit reached condition will be specified using the following\nboolean metric :\n  \"serviceruntime.googleapis.com\/quota\/exceeded\"",
          "type": "array",
          "items": {
            "$ref": "MetricValueSet"
          }
        },
        "serviceConfigId": {
          "description": "ID of the actual config used to process the request.",
          "type": "string"
        },
        "allocateInfo": {
          "description": "WARNING: DO NOT use this field until this warning message is removed.",
          "$ref": "AllocateInfo"
        }
      }
    },
    "QuotaError": {
      "id": "QuotaError",
      "description": "Represents error information for QuotaOperation.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "enumDescriptions": [
            "This is never used.",
            "Quota allocation failed.\nSame as google.rpc.Code.RESOURCE_EXHAUSTED.",
            "Quota release failed.  This error is ONLY returned on a NORMAL release.\nMore formally:  if a user requests a release of 10 tokens, but only\n5 tokens were previously allocated, in a BEST_EFFORT release, this will\nbe considered a success, 5 tokens will be released, and the result will\nbe \"Ok\".  If this is done in NORMAL mode, no tokens will be released,\nand an OUT_OF_RANGE error will be returned.\nSame as google.rpc.Code.OUT_OF_RANGE.",
            "Consumer cannot access the service because the service requires active\nbilling.",
            "Consumer's project has been marked as deleted (soft deletion).",
            "Specified API key is invalid.",
            "Specified API Key has expired.",
            "Consumer's spatula header is invalid.",
            "The consumer's LOAS role is invalid.",
            "The consumer's LOAS role has no associated project.",
            "The backend server for looking up project id\/number is unavailable.",
            "The backend server for checking service status is unavailable.",
            "The backend server for checking billing status is unavailable.",
            "The backend server for checking quota limits is unavailable."
          ],
          "type": "string",
          "enum": [
            "UNSPECIFIED",
            "RESOURCE_EXHAUSTED",
            "OUT_OF_RANGE",
            "BILLING_NOT_ACTIVE",
            "PROJECT_DELETED",
            "API_KEY_INVALID",
            "API_KEY_EXPIRED",
            "SPATULA_HEADER_INVALID",
            "LOAS_ROLE_INVALID",
            "NO_LOAS_PROJECT",
            "PROJECT_STATUS_UNAVAILABLE",
            "SERVICE_STATUS_UNAVAILABLE",
            "BILLING_STATUS_UNAVAILABLE",
            "QUOTA_SYSTEM_UNAVAILABLE"
          ]
        },
        "subject": {
          "description": "Subject to whom this error applies. See the specific enum for more details\non this field. For example, \"clientip:<ip address of client>\" or\n\"project:<Google developer project id>\".",
          "type": "string"
        },
        "description": {
          "description": "Free-form text that provides details on the cause of the error.",
          "type": "string"
        }
      }
    },
    "AllocateInfo": {
      "id": "AllocateInfo",
      "type": "object",
      "properties": {
        "unusedArguments": {
          "description": "A list of label keys that were unused by the server in processing the\nrequest. Thus, for similar requests repeated in a certain future time\nwindow, the caller can choose to ignore these labels in the requests\nto achieve better client-side cache hits and quota aggregation.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ReleaseQuotaRequest": {
      "id": "ReleaseQuotaRequest",
      "description": "Request message for the ReleaseQuota method.",
      "type": "object",
      "properties": {
        "releaseOperation": {
          "description": "Operation that describes the quota release.",
          "$ref": "QuotaOperation"
        },
        "serviceConfigId": {
          "description": "Specifies which version of service configuration should be used to process\nthe request. If unspecified or no matching version can be found, the latest\none will be used.",
          "type": "string"
        }
      }
    },
    "ReleaseQuotaResponse": {
      "id": "ReleaseQuotaResponse",
      "description": "Response message for the ReleaseQuota method.",
      "type": "object",
      "properties": {
        "operationId": {
          "description": "The same operation_id value used in the ReleaseQuotaRequest. Used for\nlogging and diagnostics purposes.",
          "type": "string"
        },
        "releaseErrors": {
          "description": "Indicates the decision of the release.",
          "type": "array",
          "items": {
            "$ref": "QuotaError"
          }
        },
        "quotaMetrics": {
          "description": "Quota metrics to indicate the result of release. Depending on the\nrequest, one or more of the following metrics will be included:\n\n1. For rate quota, per quota group or per quota metric released amount\nwill be specified using the following delta metric:\n  \"serviceruntime.googleapis.com\/api\/consumer\/quota_refund_count\"\n\n2. For allocation quota, per quota metric total usage will be specified\nusing the following gauge metric:\n  \"serviceruntime.googleapis.com\/allocation\/consumer\/quota_used_count\"\n\n3. For allocation quota, value for each quota limit associated with\nthe metrics will be specified using the following gauge metric:\n  \"serviceruntime.googleapis.com\/quota\/limit\"",
          "type": "array",
          "items": {
            "$ref": "MetricValueSet"
          }
        },
        "serviceConfigId": {
          "description": "ID of the actual config used to process the request.",
          "type": "string"
        }
      }
    },
    "StartReconciliationRequest": {
      "id": "StartReconciliationRequest",
      "description": "Request message for QuotaController.StartReconciliation.",
      "type": "object",
      "properties": {
        "reconciliationOperation": {
          "description": "Operation that describes the quota reconciliation.",
          "$ref": "QuotaOperation"
        },
        "serviceConfigId": {
          "description": "Specifies which version of service configuration should be used to process\nthe request. If unspecified or no matching version can be found, the latest\none will be used.",
          "type": "string"
        }
      }
    },
    "StartReconciliationResponse": {
      "id": "StartReconciliationResponse",
      "description": "Response message for QuotaController.StartReconciliation.",
      "type": "object",
      "properties": {
        "operationId": {
          "description": "The same operation_id value used in the StartReconciliationRequest. Used\nfor logging and diagnostics purposes.",
          "type": "string"
        },
        "reconciliationErrors": {
          "description": "Indicates the decision of the reconciliation start.",
          "type": "array",
          "items": {
            "$ref": "QuotaError"
          }
        },
        "quotaMetrics": {
          "description": "Metric values as tracked by One Platform before the start of\nreconciliation. The following metrics will be included:\n\n1. Per quota metric total usage will be specified using the following gauge\nmetric:\n  \"serviceruntime.googleapis.com\/allocation\/consumer\/quota_used_count\"\n\n2. Value for each quota limit associated with the metrics will be specified\nusing the following gauge metric:\n  \"serviceruntime.googleapis.com\/quota\/limit\"",
          "type": "array",
          "items": {
            "$ref": "MetricValueSet"
          }
        },
        "serviceConfigId": {
          "description": "ID of the actual config used to process the request.",
          "type": "string"
        }
      }
    },
    "EndReconciliationRequest": {
      "id": "EndReconciliationRequest",
      "description": "Request message for QuotaController.EndReconciliation.",
      "type": "object",
      "properties": {
        "reconciliationOperation": {
          "description": "Operation that describes the quota reconciliation.",
          "$ref": "QuotaOperation"
        },
        "serviceConfigId": {
          "description": "Specifies which version of service configuration should be used to process\nthe request. If unspecified or no matching version can be found, the latest\none will be used.",
          "type": "string"
        }
      }
    },
    "EndReconciliationResponse": {
      "id": "EndReconciliationResponse",
      "description": "Response message for QuotaController.EndReconciliation.",
      "type": "object",
      "properties": {
        "operationId": {
          "description": "The same operation_id value used in the EndReconciliationRequest. Used for\nlogging and diagnostics purposes.",
          "type": "string"
        },
        "reconciliationErrors": {
          "description": "Indicates the decision of the reconciliation end.",
          "type": "array",
          "items": {
            "$ref": "QuotaError"
          }
        },
        "quotaMetrics": {
          "description": "Metric values as tracked by One Platform before the adjustment was made.\nThe following metrics will be included:\n\n1. Per quota metric total usage will be specified using the following gauge\nmetric:\n  \"serviceruntime.googleapis.com\/allocation\/consumer\/quota_used_count\"\n\n2. Value for each quota limit associated with the metrics will be specified\nusing the following gauge metric:\n  \"serviceruntime.googleapis.com\/quota\/limit\"\n\n3. Delta value of the usage after the reconciliation for limits associated\nwith the metrics will be specified using the following metric:\n  \"serviceruntime.googleapis.com\/allocation\/reconciliation_delta\"\nThe delta value is defined as:\n  new_usage_from_client - existing_value_in_spanner.\nThis metric is not defined in serviceruntime.yaml or in Cloud Monarch.\nThis metric is meant for callers' use only. Since this metric is not\ndefined in the monitoring backend, reporting on this metric will result in\nan error.",
          "type": "array",
          "items": {
            "$ref": "MetricValueSet"
          }
        },
        "serviceConfigId": {
          "description": "ID of the actual config used to process the request.",
          "type": "string"
        }
      }
    },
    "CheckRequest": {
      "id": "CheckRequest",
      "description": "Request message for the Check method.",
      "type": "object",
      "properties": {
        "operation": {
          "description": "The operation to be checked.",
          "$ref": "Operation"
        },
        "requestProjectSettings": {
          "description": "Requests the project settings to be returned as part of the check response.",
          "type": "boolean"
        },
        "serviceConfigId": {
          "description": "Specifies which version of service configuration should be used to process\nthe request.\n\nIf unspecified or no matching version can be found, the\nlatest one will be used.",
          "type": "string"
        },
        "skipActivationCheck": {
          "description": "Indicates if service activation check should be skipped for this request.\nDefault behavior is to perform the check and apply relevant quota.",
          "type": "boolean"
        },
        "serviceControlToken": {
          "description": "Optional forwarding token from previous Chemist check.\nChemist will internally interpret it as a serialized\nrepresentation of the InternalServiceControlToken proto.\ngoogle3\/apiserving\/servicecontrol\/proto\/security\/internal_token.proto\nThis field is opaque outside of Chemist.",
          "type": "string",
          "format": "byte"
        },
        "credentialMint": {
          "description": "Optional serialized 'gaia_mint.MintWrapper'.\nOnly one of 'credential_mint' or 'data_access_token' can be specified.",
          "type": "string",
          "format": "byte"
        },
        "dataAccessToken": {
          "description": "Optional serialized 'security.credentials.DataAccessTokenProto'.\nOnly one of 'credential_mint' or 'data_access_token' can be specified.",
          "type": "string",
          "format": "byte"
        },
        "credentialOrigin": {
          "description": "Optional serialized 'security.credentials.CredentialOrigin' extracted from\nEUC.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "Represents information regarding an operation.",
      "type": "object",
      "properties": {
        "operationId": {
          "description": "Identity of the operation. This must be unique within the scope of the\nservice that generated the operation. If the service calls\nCheck() and Report() on the same operation, the two calls should carry\nthe same id.\n\nUUID version 4 is recommended, though not required.\nIn scenarios where an operation is computed from existing information\nand an idempotent id is desirable for deduplication purpose, UUID version 5\nis recommended. See RFC 4122 for details.",
          "type": "string"
        },
        "operationName": {
          "description": "Fully qualified name of the operation. Reserved for future use.",
          "type": "string"
        },
        "consumerId": {
          "description": "Identity of the consumer who is using the service.\nThis field should be filled in for the operations initiated by a\nconsumer, but not for service-initiated operations that are\nnot related to a specific consumer.\n\nThis can be in one of the following formats:\n  project:<project_id>,\n  project_number:<project_number>,\n  api_key:<api_key>.",
          "type": "string"
        },
        "startTime": {
          "description": "Required. Start time of the operation.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "End time of the operation.\nRequired when the operation is used in ServiceController.Report,\nbut optional when the operation is used in ServiceController.Check.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels describing the operation. Only the following labels are allowed:\n\n- Labels describing monitored resources as defined in\n  the service configuration.\n- Default labels of metric values. When specified, labels defined in the\n  metric value override these default.\n- The following labels defined by Google Cloud Platform:\n    - `cloud.googleapis.com\/location` describing the location where the\n       operation happened,\n    - `servicecontrol.googleapis.com\/user_agent` describing the user agent\n       of the API request,\n    - `servicecontrol.googleapis.com\/service_agent` describing the service\n       used to handle the API request (e.g. ESP),\n    - `servicecontrol.googleapis.com\/platform` describing the platform\n       where the API is served, such as App Engine, Compute Engine, or\n       Kubernetes Engine.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metricValueSets": {
          "description": "Represents information about this operation. Each MetricValueSet\ncorresponds to a metric defined in the service configuration.\nThe data type used in the MetricValueSet must agree with\nthe data type specified in the metric definition.\n\nWithin a single operation, it is not allowed to have more than one\nMetricValue instances that have the same metric names and identical\nlabel value combinations. If a request has such duplicated MetricValue\ninstances, the entire request is rejected with\nan invalid argument error.",
          "type": "array",
          "items": {
            "$ref": "MetricValueSet"
          }
        },
        "logEntries": {
          "description": "Represents information to be logged.",
          "type": "array",
          "items": {
            "$ref": "LogEntry"
          }
        },
        "quotaProperties": {
          "description": "Represents the properties needed for quota check. Applicable only if this\noperation is for a quota check request. If this is not specified, no quota\ncheck will be performed.",
          "$ref": "QuotaProperties"
        },
        "importance": {
          "description": "DO NOT USE. This is an experimental field.",
          "enumDescriptions": [
            "The API implementation may cache and aggregate the data.\nThe data may be lost when rare and unexpected system failures occur.",
            "The API implementation doesn't cache and aggregate the data.\nIf the method returns successfully, it's guaranteed that the data has\nbeen persisted in durable storage.",
            "In addition to the behavior described in HIGH, DEBUG enables\nadditional validation logic that is only useful during the onboarding\nprocess. This is only available to Google internal services and\nthe service must be whitelisted by chemist-dev@google.com in order\nto use this level."
          ],
          "type": "string",
          "enum": [
            "LOW",
            "HIGH",
            "DEBUG"
          ]
        },
        "userLabels": {
          "description": "User defined labels for the resource that this operation is associated\nwith. Only a combination of 1000 user labels per consumer project are\nallowed.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourceContainer": {
          "description": "DO NOT USE. This field is deprecated, use \"resources\" field instead.\nThe resource name of the parent of a resource in the resource hierarchy.\n\nThis can be in one of the following formats:\n    - \u201Cprojects\/<project-id or project-number>\u201D\n    - \u201Cfolders\/<folder-id>\u201D\n    - \u201Corganizations\/<organization-id>\u201D",
          "type": "string"
        },
        "resources": {
          "description": "The resources that are involved in the operation.\nThe maximum supported number of entries in this field is 100.",
          "type": "array",
          "items": {
            "$ref": "ResourceInfo"
          }
        }
      }
    },
    "LogEntry": {
      "id": "LogEntry",
      "description": "An individual log entry.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The log to which this log entry belongs. Examples: `\"syslog\"`,\n`\"book_log\"`.",
          "type": "string"
        },
        "timestamp": {
          "description": "The time the event described by the log entry occurred. If\nomitted, defaults to operation start time.",
          "type": "string",
          "format": "google-datetime"
        },
        "severity": {
          "description": "The severity of the log entry. The default value is\n`LogSeverity.DEFAULT`.",
          "enumDescriptions": [
            "(0) The log entry has no assigned severity level.",
            "(100) Debug or trace information.",
            "(200) Routine information, such as ongoing status or performance.",
            "(300) Normal but significant events, such as start up, shut down, or\na configuration change.",
            "(400) Warning events might cause problems.",
            "(500) Error events are likely to cause problems.",
            "(600) Critical events cause more severe problems or outages.",
            "(700) A person must take an action immediately.",
            "(800) One or more systems are unusable."
          ],
          "type": "string",
          "enum": [
            "DEFAULT",
            "DEBUG",
            "INFO",
            "NOTICE",
            "WARNING",
            "ERROR",
            "CRITICAL",
            "ALERT",
            "EMERGENCY"
          ]
        },
        "httpRequest": {
          "description": "Optional. Information about the HTTP request associated with this\nlog entry, if applicable.",
          "$ref": "HttpRequest"
        },
        "trace": {
          "description": "Optional. Resource name of the trace associated with the log entry, if any.\nIf this field contains a relative resource name, you can assume the name is\nrelative to `\/\/tracing.googleapis.com`. Example:\n`projects\/my-projectid\/traces\/06796866738c859f2f19b7cfb3214824`",
          "type": "string"
        },
        "insertId": {
          "description": "A unique ID for the log entry used for deduplication. If omitted,\nthe implementation will generate one based on operation_id.",
          "type": "string"
        },
        "labels": {
          "description": "A set of user-defined (key, value) data that provides additional\ninformation about the log entry.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "protoPayload": {
          "description": "The log entry payload, represented as a protocol buffer that is\nexpressed as a JSON object. The only accepted type currently is\nAuditLog.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "textPayload": {
          "description": "The log entry payload, represented as a Unicode string (UTF-8).",
          "type": "string"
        },
        "structPayload": {
          "description": "The log entry payload, represented as a structure that\nis expressed as a JSON object.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "operation": {
          "description": "Optional. Information about an operation associated with the log entry, if\napplicable.",
          "$ref": "LogEntryOperation"
        }
      }
    },
    "HttpRequest": {
      "id": "HttpRequest",
      "description": "A common proto for logging HTTP requests. Only contains semantics\ndefined by the HTTP specification. Product-specific logging\ninformation MUST be defined in a separate message.",
      "type": "object",
      "properties": {
        "requestMethod": {
          "description": "The request method. Examples: `\"GET\"`, `\"HEAD\"`, `\"PUT\"`, `\"POST\"`.",
          "type": "string"
        },
        "requestUrl": {
          "description": "The scheme (http, https), the host name, the path, and the query\nportion of the URL that was requested.\nExample: `\"http:\/\/example.com\/some\/info?color=red\"`.",
          "type": "string"
        },
        "requestSize": {
          "description": "The size of the HTTP request message in bytes, including the request\nheaders and the request body.",
          "type": "string",
          "format": "int64"
        },
        "status": {
          "description": "The response code indicating the status of the response.\nExamples: 200, 404.",
          "type": "integer",
          "format": "int32"
        },
        "responseSize": {
          "description": "The size of the HTTP response message sent back to the client, in bytes,\nincluding the response headers and the response body.",
          "type": "string",
          "format": "int64"
        },
        "userAgent": {
          "description": "The user agent sent by the client. Example:\n`\"Mozilla\/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET\nCLR 1.0.3705)\"`.",
          "type": "string"
        },
        "remoteIp": {
          "description": "The IP address (IPv4 or IPv6) of the client that issued the HTTP\nrequest. Examples: `\"192.168.1.1\"`, `\"FE80::0202:B3FF:FE1E:8329\"`.",
          "type": "string"
        },
        "serverIp": {
          "description": "The IP address (IPv4 or IPv6) of the origin server that the request was\nsent to.",
          "type": "string"
        },
        "referer": {
          "description": "The referer URL of the request, as defined in\n[HTTP\/1.1 Header Field\nDefinitions](http:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616-sec14.html).",
          "type": "string"
        },
        "latency": {
          "description": "The request processing latency on the server, from the time the request was\nreceived until the response was sent.",
          "type": "string",
          "format": "google-duration"
        },
        "cacheLookup": {
          "description": "Whether or not a cache lookup was attempted.",
          "type": "boolean"
        },
        "cacheHit": {
          "description": "Whether or not an entity was served from cache\n(with or without validation).",
          "type": "boolean"
        },
        "cacheValidatedWithOriginServer": {
          "description": "Whether or not the response was validated with the origin server before\nbeing served from cache. This field is only meaningful if `cache_hit` is\nTrue.",
          "type": "boolean"
        },
        "cacheFillBytes": {
          "description": "The number of HTTP response bytes inserted into cache. Set only when a\ncache fill was attempted.",
          "type": "string",
          "format": "int64"
        },
        "protocol": {
          "description": "Protocol used for the request. Examples: \"HTTP\/1.1\", \"HTTP\/2\", \"websocket\"",
          "type": "string"
        }
      }
    },
    "LogEntryOperation": {
      "id": "LogEntryOperation",
      "description": "Additional information about a potentially long-running operation with which\na log entry is associated.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Optional. An arbitrary operation identifier. Log entries with the\nsame identifier are assumed to be part of the same operation.",
          "type": "string"
        },
        "producer": {
          "description": "Optional. An arbitrary producer identifier. The combination of\n`id` and `producer` must be globally unique.  Examples for `producer`:\n`\"MyDivision.MyBigCompany.com\"`, `\"github.com\/MyProject\/MyApplication\"`.",
          "type": "string"
        },
        "first": {
          "description": "Optional. Set this to True if this is the first log entry in the operation.",
          "type": "boolean"
        },
        "last": {
          "description": "Optional. Set this to True if this is the last log entry in the operation.",
          "type": "boolean"
        }
      }
    },
    "QuotaProperties": {
      "id": "QuotaProperties",
      "description": "Represents the properties needed for quota operations.",
      "type": "object",
      "properties": {
        "quotaMode": {
          "description": "Quota mode for this operation.",
          "enumDescriptions": [
            "Decreases available quota by the cost specified for the operation.\nIf cost is higher than available quota, operation fails and returns\nerror.",
            "Decreases available quota by the cost specified for the operation.\nIf cost is higher than available quota, operation does not fail and\navailable quota goes down to zero but it returns error.",
            "Does not change any available quota. Only checks if there is enough\nquota.\nNo lock is placed on the checked tokens neither.",
            "Increases available quota by the operation cost specified for the\noperation."
          ],
          "type": "string",
          "enum": [
            "ACQUIRE",
            "ACQUIRE_BEST_EFFORT",
            "CHECK",
            "RELEASE"
          ]
        }
      }
    },
    "ResourceInfo": {
      "id": "ResourceInfo",
      "description": "Describes a resource associated with this operation.",
      "type": "object",
      "properties": {
        "resourceContainer": {
          "description": "The identifier of the parent of this resource instance.\nMust be in one of the following formats:\n    - \u201Cprojects\/<project-id or project-number>\u201D\n    - \u201Cfolders\/<folder-id>\u201D\n    - \u201Corganizations\/<organization-id>\u201D",
          "type": "string"
        },
        "resourceName": {
          "description": "Name of the resource. This is used for auditing purposes.",
          "type": "string"
        },
        "resourceLocation": {
          "description": "The location of the resource. If not empty, the resource will be checked\nagainst location policy. The value must be a valid zone, region or\nmultiregion. For example: \"europe-west4\" or \"northamerica-northeast1-a\"",
          "type": "string"
        }
      }
    },
    "CheckResponse": {
      "id": "CheckResponse",
      "description": "Response message for the Check method.",
      "type": "object",
      "properties": {
        "operationId": {
          "description": "The same operation_id value used in the CheckRequest.\nUsed for logging and diagnostics purposes.",
          "type": "string"
        },
        "checkErrors": {
          "description": "Indicate the decision of the check.\n\nIf no check errors are present, the service should process the operation.\nOtherwise the service should use the list of errors to determine the\nappropriate action.",
          "type": "array",
          "items": {
            "$ref": "CheckError"
          }
        },
        "projectSettings": {
          "description": "The project settings for the given project that applies to the given\nservice name.\nAvailable only when request_project_settings is set in the given operation\nand in which a project number or an api key is provided.",
          "$ref": "ProjectSettings"
        },
        "quotaInfo": {
          "description": "Quota information for the check request associated with this response.\n",
          "$ref": "QuotaInfo"
        },
        "serviceConfigId": {
          "description": "The actual config id used to process the request.",
          "type": "string"
        },
        "checkInfo": {
          "description": "Feedback data returned from the server during processing a Check request.",
          "$ref": "CheckInfo"
        },
        "serviceControlContext": {
          "description": "Contains security context information used for IAM Condition.\nIt's a serialized representation of the ServiceControlContext proto.\ngoogle3\/security\/credentials\/proto\/service_control_context.proto",
          "type": "string",
          "format": "byte"
        },
        "serviceControlToken": {
          "description": "An opaque token that may be forwarded by the calling service to\nother cloud services.\nIt allows forwarding the secure GCP related information across\nmultiple services. Chemist internally interprets it as a serialized\nrepresentation of the InternalServiceControlToken proto.\ngoogle3\/apiserving\/servicecontrol\/proto\/security\/internal_token.proto\nThis field is opaque outside of Chemist.",
          "type": "string",
          "format": "byte"
        },
        "checkTime": {
          "description": "A timestamp indicating when check results in this response were first\nproduced on the server. It is possible for a check response to carry a\nstale timestamp due to the caching behavior at client and server.\nIf the staleness of this timestamp is less than 60s, the caller **must**\naccept the results in the check response. Otherwise, the caller needs to\ndecide how to handle the response (e.g. to fail open or close).\n\nWARNING: DO NOT use this field until this warning message is removed.",
          "type": "string",
          "format": "google-datetime"
        },
        "resourceIsRestrictedByVpcServiceControls": {
          "description": "Indicates whether any resource specified in the check request is\nrestricted by VPC Service Controls policy.",
          "type": "boolean"
        }
      }
    },
    "CheckError": {
      "id": "CheckError",
      "description": "Defines the errors to be returned in\ngoogle.api.servicecontrol.v1.CheckResponse.check_errors.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The error code.",
          "enumDescriptions": [
            "This is never used in `CheckResponse`.",
            "The consumer's project id, network container, or resource container was\nnot found. Same as google.rpc.Code.NOT_FOUND.",
            "The consumer doesn't have access to the specified resource.\nSame as google.rpc.Code.PERMISSION_DENIED.",
            "Quota check failed. Same as google.rpc.Code.RESOURCE_EXHAUSTED.",
            "Budget check failed.",
            "The consumer's request has been flagged as a DoS attack.",
            "The consumer's request should be rejected in order to protect the service\nfrom being overloaded.",
            "The consumer has been flagged as an abuser.",
            "The consumer hasn't activated the service.",
            "The consumer cannot access the service due to visibility configuration.",
            "The consumer cannot access the service because billing is disabled.",
            "The consumer's project has been marked as deleted (soft deletion).",
            "The consumer's project number or id does not represent a valid project.",
            "The input consumer info does not represent a valid consumer folder or\norganization.",
            "The IP address of the consumer is invalid for the specific consumer\nproject.",
            "The referer address of the consumer request is invalid for the specific\nconsumer project.",
            "The client application of the consumer request is invalid for the\nspecific consumer project.",
            "The API targeted by this request is invalid for the specified consumer\nproject.",
            "The consumer's API key is invalid.",
            "The consumer's API Key has expired.",
            "The consumer's API Key was not found in config record.",
            "The consumer's spatula header is invalid.",
            "The consumer's LOAS role is invalid.",
            "The consumer's LOAS role has no associated project.",
            "The consumer's LOAS project is not `ACTIVE` in LoquatV2.",
            "Request is not allowed as per security policies defined in Org Policy.",
            "The credential in the request can not be verified.",
            "Request is not allowed as per location policies defined in Org Policy.",
            "The backend server for looking up project id\/number is unavailable.",
            "The backend server for checking service status is unavailable.",
            "The backend server for checking billing status is unavailable.",
            "The backend server for checking quota limits is unavailable.",
            "The Spanner for looking up LOAS project is unavailable.",
            "Cloud Resource Manager backend server is unavailable.",
            "Backend server for evaluating security policy is unavailable.",
            "Backend server for evaluating location policy is unavailable."
          ],
          "type": "string",
          "enum": [
            "ERROR_CODE_UNSPECIFIED",
            "NOT_FOUND",
            "PERMISSION_DENIED",
            "RESOURCE_EXHAUSTED",
            "BUDGET_EXCEEDED",
            "DENIAL_OF_SERVICE_DETECTED",
            "LOAD_SHEDDING",
            "ABUSER_DETECTED",
            "SERVICE_NOT_ACTIVATED",
            "VISIBILITY_DENIED",
            "BILLING_DISABLED",
            "PROJECT_DELETED",
            "PROJECT_INVALID",
            "CONSUMER_INVALID",
            "IP_ADDRESS_BLOCKED",
            "REFERER_BLOCKED",
            "CLIENT_APP_BLOCKED",
            "API_TARGET_BLOCKED",
            "API_KEY_INVALID",
            "API_KEY_EXPIRED",
            "API_KEY_NOT_FOUND",
            "SPATULA_HEADER_INVALID",
            "LOAS_ROLE_INVALID",
            "NO_LOAS_PROJECT",
            "LOAS_PROJECT_DISABLED",
            "SECURITY_POLICY_VIOLATED",
            "INVALID_CREDENTIAL",
            "LOCATION_POLICY_VIOLATED",
            "NAMESPACE_LOOKUP_UNAVAILABLE",
            "SERVICE_STATUS_UNAVAILABLE",
            "BILLING_STATUS_UNAVAILABLE",
            "QUOTA_CHECK_UNAVAILABLE",
            "LOAS_PROJECT_LOOKUP_UNAVAILABLE",
            "CLOUD_RESOURCE_MANAGER_BACKEND_UNAVAILABLE",
            "SECURITY_POLICY_BACKEND_UNAVAILABLE",
            "LOCATION_POLICY_BACKEND_UNAVAILABLE"
          ]
        },
        "subject": {
          "description": "Subject to whom this error applies. See the specific code enum for more\ndetails on this field. For example:\n    - \u201Cproject:<project-id or project-number>\u201D\n    - \u201Cfolder:<folder-id>\u201D\n    - \u201Corganization:<organization-id>\u201D",
          "type": "string"
        },
        "detail": {
          "description": "Free-form text providing details on the error cause of the error.",
          "type": "string"
        },
        "status": {
          "description": "Contains public information about the check error. If available,\n`status.code` will be non zero and client can propagate it out as public\nerror.",
          "$ref": "Status"
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https:\/\/github.com\/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` that can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security\/privacy reasons.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "ProjectSettings": {
      "id": "ProjectSettings",
      "description": "The project settings of a given project that applies to a given service name.",
      "type": "object",
      "properties": {
        "projectProperties": {
          "description": "The project properties of the given project that applies to the given\nservice name.",
          "$ref": "ProjectContext"
        },
        "visibility": {
          "description": "The visibility rules of the given project that applies to the given\nservice name.",
          "$ref": "VisibilityContext"
        },
        "spatulaExtra": {
          "description": "Decrypted Spatula Header Extra field. See cs\/SpatulaHeaderExtra.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "ProjectContext": {
      "id": "ProjectContext",
      "description": "`ProjectContext` provides information about the caller's\nproject. For meaning and format of project identifiers, consult the\ndeveloper console documentation.",
      "type": "object",
      "properties": {
        "projectNumber": {
          "description": "Identifies the developer project. This is the project associated with the\ndeveloper's calling application. A value of 0 indicates no project number\nis found.",
          "type": "string",
          "format": "uint64"
        },
        "projectId": {
          "description": "Identifies the ID of the caller project if non-empty.",
          "type": "string"
        },
        "properties": {
          "description": "Project properties retrieved from project config.",
          "type": "object",
          "additionalProperties": {
            "$ref": "ProjectProperty"
          }
        }
      }
    },
    "ProjectProperty": {
      "id": "ProjectProperty",
      "description": "The project property.",
      "type": "object",
      "properties": {
        "values": {
          "description": "The values of the property.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VisibilityContext": {
      "id": "VisibilityContext",
      "description": "`VisibilityContext` provides visibility information for the request.\nSee http:\/\/go\/api-surface-visibility for more details.",
      "type": "object",
      "properties": {
        "labels": {
          "description": "The set of visibility labels applied to the request.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "QuotaInfo": {
      "id": "QuotaInfo",
      "description": "Contains the quota information for a quota check response.",
      "type": "object",
      "properties": {
        "quotaConsumed": {
          "description": "Map of quota group name to the actual number of tokens consumed. If the\nquota check was not successful, then this will not be populated due to no\nquota consumption.\n\nWe are not merging this field with 'quota_metrics' field because of the\ncomplexity of scaling in Chemist client code base. For simplicity, we will\nkeep this field for Castor (that scales quota usage) and 'quota_metrics'\nfor SuperQuota (that doesn't scale quota usage).\n",
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "limitExceeded": {
          "description": "Quota Metrics that have exceeded quota limits.\nFor QuotaGroup-based quota, this is QuotaGroup.name\nFor QuotaLimit-based quota, this is QuotaLimit.name\nSee: google.api.Quota\nDeprecated: Use quota_metrics to get per quota group limit exceeded status.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "quotaMetrics": {
          "description": "Quota metrics to indicate the usage. Depending on the check request, one or\nmore of the following metrics will be included:\n\n1. For rate quota, per quota group or per quota metric incremental usage\nwill be specified using the following delta metric:\n  \"serviceruntime.googleapis.com\/api\/consumer\/quota_used_count\"\n\n2. For allocation quota, per quota metric total usage will be specified\nusing the following gauge metric:\n  \"serviceruntime.googleapis.com\/allocation\/consumer\/quota_used_count\"\n\n3. For both rate quota and allocation quota, the quota limit reached\ncondition will be specified using the following boolean metric:\n  \"serviceruntime.googleapis.com\/quota\/exceeded\"",
          "type": "array",
          "items": {
            "$ref": "MetricValueSet"
          }
        }
      }
    },
    "CheckInfo": {
      "id": "CheckInfo",
      "description": "Contains additional information about the check operation.",
      "type": "object",
      "properties": {
        "unusedArguments": {
          "description": "A list of fields and label keys that are ignored by the server.\nThe client doesn't need to send them for following requests to improve\nperformance and allow better aggregation.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "consumerInfo": {
          "description": "Consumer info of this check.",
          "$ref": "ConsumerInfo"
        },
        "restrictedContainers": {
          "description": "VPC Service Controls enabled containers. The client should fail-closed\nfor these containers when in future Chemist server returns unavailable\nRPC status for the same container.\nEach entry has 'projects\/<id_or_number>', 'folders\/<number>' or\n'organizations\/<number>' format. All containers in the check request\nused in VPC Service Controls check will be present in either\nrestricted_containers or unrestricted_containers. Each container will be\nincluded at least in the original form (by ID or number) used in the\nrequest.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unrestrictedContainers": {
          "description": "Containers without VPC Service Controls policy. The client may fail-open\nfor these containers when in future Chemist server returns unavailable\nRPC status for the same container.\nEach entry has 'projects\/<id_or_number>', 'folders\/<number>' or\n'organizations\/<number>' format. All containers in the check request\nused in VPC Service Controls check will be present in either\nrestricted_containers or unrestricted_containers. Each container will be\nincluded at least in the original form (by ID or number) used in the\nrequest.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ConsumerInfo": {
      "id": "ConsumerInfo",
      "description": "`ConsumerInfo` provides information about the consumer.",
      "type": "object",
      "properties": {
        "projectNumber": {
          "description": "The Google cloud project number, e.g. 1234567890. A value of 0 indicates\nno project number is found.\n\nNOTE: This field is deprecated after Chemist support flexible consumer\nid. New code should not depend on this field anymore.",
          "type": "string",
          "format": "int64"
        },
        "type": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "CONSUMER_TYPE_UNSPECIFIED",
            "PROJECT",
            "FOLDER",
            "ORGANIZATION"
          ]
        },
        "consumerNumber": {
          "description": "The consumer identity number, can be Google cloud project number, folder\nnumber or organization number e.g. 1234567890. A value of 0 indicates no\nconsumer number is found.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ReportRequest": {
      "id": "ReportRequest",
      "description": "Request message for the Report method.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "Operations to be reported.\n\nTypically the service should report one operation per request.\nPutting multiple operations into a single request is allowed, but should\nbe used only when multiple operations are natually available at the time\nof the report.\n\nIf multiple operations are in a single request, the total request size\nshould be no larger than 1MB. See ReportResponse.report_errors for\npartial failure behavior.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "serviceConfigId": {
          "description": "Specifies which version of service config should be used to process the\nrequest.\n\nIf unspecified or no matching version can be found, the\nlatest one will be used.",
          "type": "string"
        }
      }
    },
    "ReportResponse": {
      "id": "ReportResponse",
      "description": "Response message for the Report method.",
      "type": "object",
      "properties": {
        "reportErrors": {
          "description": "Partial failures, one for each `Operation` in the request that failed\nprocessing. There are three possible combinations of the RPC status:\n\n1. The combination of a successful RPC status and an empty `report_errors`\n   list indicates a complete success where all `Operations` in the\n   request are processed successfully.\n2. The combination of a successful RPC status and a non-empty\n   `report_errors` list indicates a partial success where some\n   `Operations` in the request succeeded. Each\n   `Operation` that failed processing has a corresponding item\n   in this list.\n3. A failed RPC status indicates a general non-deterministic failure.\n   When this happens, it's impossible to know which of the\n   'Operations' in the request succeeded or failed.",
          "type": "array",
          "items": {
            "$ref": "ReportError"
          }
        },
        "reportInfos": {
          "description": "Quota usage for each quota release `Operation` request.\n\nFully or partially failed quota release request may or may not be present\nin `report_quota_info`. For example, a failed quota release request will\nhave the current quota usage info when precise quota library returns the\ninfo. A deadline exceeded quota request will not have quota usage info.\n\nIf there is no quota release request, report_quota_info will be empty.\n",
          "type": "array",
          "items": {
            "$ref": "ReportInfo"
          }
        },
        "serviceConfigId": {
          "description": "The actual config id used to process the request.",
          "type": "string"
        }
      }
    },
    "ReportError": {
      "id": "ReportError",
      "description": "Represents the processing error of one Operation in the request.",
      "type": "object",
      "properties": {
        "operationId": {
          "description": "The Operation.operation_id value from the request.",
          "type": "string"
        },
        "status": {
          "description": "Details of the error when processing the Operation.",
          "$ref": "Status"
        }
      }
    },
    "ReportInfo": {
      "id": "ReportInfo",
      "description": "Contains additional info about the report operation.",
      "type": "object",
      "properties": {
        "operationId": {
          "description": "The Operation.operation_id value from the request.",
          "type": "string"
        },
        "quotaInfo": {
          "description": "Quota usage info when processing the `Operation`.",
          "$ref": "QuotaInfo"
        }
      }
    },
    "AuditLog": {
      "id": "AuditLog",
      "description": "Common audit log format for Google Cloud Platform API operations.\n\n",
      "type": "object",
      "properties": {
        "serviceName": {
          "description": "The name of the API service performing the operation. For example,\n`\"datastore.googleapis.com\"`.",
          "type": "string"
        },
        "methodName": {
          "description": "The name of the service method or operation.\nFor API calls, this should be the name of the API method.\nFor example,\n\n    \"google.datastore.v1.Datastore.RunQuery\"\n    \"google.logging.v1.LoggingService.DeleteLog\"",
          "type": "string"
        },
        "resourceName": {
          "description": "The resource or collection that is the target of the operation.\nThe name is a scheme-less URI, not including the API service name.\nFor example:\n\n    \"shelves\/SHELF_ID\/books\"\n    \"shelves\/SHELF_ID\/books\/BOOK_ID\"",
          "type": "string"
        },
        "resourceLocation": {
          "description": "The resource location information.",
          "$ref": "ResourceLocation"
        },
        "resourceOriginalState": {
          "description": "The resource's original state before mutation. Present only for\noperations which have successfully modified the targeted resource(s).\nIn general, this field should contain all changed fields, except those\nthat are already been included in `request`, `response`, `metadata` or\n`service_data` fields.\nWhen the JSON object represented here has a proto equivalent,\nthe proto name will be indicated in the `@type` property.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "numResponseItems": {
          "description": "The number of items returned from a List or Query API method,\nif applicable.",
          "type": "string",
          "format": "int64"
        },
        "status": {
          "description": "The status of the overall operation.",
          "$ref": "Status"
        },
        "authenticationInfo": {
          "description": "Authentication information.",
          "$ref": "AuthenticationInfo"
        },
        "authorizationInfo": {
          "description": "Authorization information. If there are multiple\nresources or permissions involved, then there is\none AuthorizationInfo element for each {resource, permission} tuple.",
          "type": "array",
          "items": {
            "$ref": "AuthorizationInfo"
          }
        },
        "requestMetadata": {
          "description": "Metadata about the operation.",
          "$ref": "RequestMetadata"
        },
        "request": {
          "description": "The operation request. This may not include all request parameters,\nsuch as those that are too large, privacy-sensitive, or duplicated\nelsewhere in the log record.\nIt should never include user-generated data, such as file contents.\nWhen the JSON object represented here has a proto equivalent, the proto\nname will be indicated in the `@type` property.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "response": {
          "description": "The operation response. This may not include all response elements,\nsuch as those that are too large, privacy-sensitive, or duplicated\nelsewhere in the log record.\nIt should never include user-generated data, such as file contents.\nWhen the JSON object represented here has a proto equivalent, the proto\nname will be indicated in the `@type` property.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "metadata": {
          "description": "Other service-specific data about the request, response, and other\ninformation associated with the current audited event.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "serviceData": {
          "description": "Deprecated, use `metadata` field instead.\nOther service-specific data about the request, response, and other\nactivities.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "auditLoggableMint": {
          "type": "string",
          "format": "byte"
        },
        "auditLoggableServiceControlToken": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "ResourceLocation": {
      "id": "ResourceLocation",
      "description": "Location information about a resource.",
      "type": "object",
      "properties": {
        "currentLocations": {
          "description": "The locations of a resource after the execution of the operation.\nFor example:\n\n    \"europe-west1-a\"\n    \"us-east1\"\n    \"nam3\"",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "originalLocations": {
          "description": "The locations of a resource prior to the execution of the operation.\nFor example:\n\n    \"europe-west1-a\"\n    \"us-east1\"\n    \"nam3\"",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AuthenticationInfo": {
      "id": "AuthenticationInfo",
      "description": "Authentication information for the operation.",
      "type": "object",
      "properties": {
        "principalEmail": {
          "description": "The email address of the authenticated user (or service account on behalf\nof third party principal) making the request. For privacy reasons, the\nprincipal email address is redacted for all read-only operations that fail\nwith a \"permission denied\" error.",
          "type": "string"
        },
        "principal": {
          "description": "The Gaia ID of the authenticated user making the request.\nIf possible, principal_email should be set as well.\nCloud logging backend uses this Gaia ID to lookup its principal email (if\nnot provided). For privacy concern, only those accounts without alternative\nemails will be resolved.",
          "type": "string",
          "format": "int64"
        },
        "authoritySelector": {
          "description": "The authority selector specified by the requestor, if any.\nIt is not guaranteed that the principal was allowed to use this authority.",
          "type": "string"
        },
        "thirdPartyPrincipal": {
          "description": "The third party identification (if any) of the authenticated user making\nthe request.\nWhen the JSON object represented here has a proto equivalent, the proto\nname will be indicated in the `@type` property.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "serviceAccountKeyName": {
          "description": "The name of the service account key used to create or exchange\ncredentials for authenticating the service account making the request.\nThis is a scheme-less URI full resource name. For example:\n\n\"\/\/iam.googleapis.com\/projects\/{PROJECT_ID}\/serviceAccounts\/{ACCOUNT}\/keys\/{key}\"",
          "type": "string"
        },
        "serviceAccountDelegationInfo": {
          "description": "Identity delegation history of an authenticated service account that makes\nthe request. It contains information on the real authorities that try to\naccess GCP resources by delegating on a service account. When multiple\nauthorities present, they are guaranteed to be sorted based on the original\nordering of the identity delegation events.",
          "type": "array",
          "items": {
            "$ref": "ServiceAccountDelegationInfo"
          }
        }
      }
    },
    "ServiceAccountDelegationInfo": {
      "id": "ServiceAccountDelegationInfo",
      "description": "Identity delegation history of an authenticated service account.",
      "type": "object",
      "properties": {
        "serviceAccountPrincipal": {
          "description": "Service account as the real authority.",
          "$ref": "ServiceAccountPrincipal"
        },
        "humanUserPrincipal": {
          "description": "Human user account as the real authority.",
          "$ref": "HumanUserPrincipal"
        },
        "thirdPartyPrincipal": {
          "description": "Third party identity as the real authority.",
          "$ref": "ThirdPartyPrincipal"
        }
      }
    },
    "ServiceAccountPrincipal": {
      "id": "ServiceAccountPrincipal",
      "description": "Audit log format for service account principal.",
      "type": "object",
      "properties": {
        "principalEmail": {
          "description": "The email address of the service account.",
          "type": "string"
        },
        "serviceMetadata": {
          "description": "Metadata about the service that uses the service account.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "HumanUserPrincipal": {
      "id": "HumanUserPrincipal",
      "description": "Audit log format for human user account principal.",
      "type": "object",
      "properties": {
        "principalEmail": {
          "description": "The email address of the human user account.",
          "type": "string"
        }
      }
    },
    "ThirdPartyPrincipal": {
      "id": "ThirdPartyPrincipal",
      "description": "Audit log format for third party identity principal.",
      "type": "object",
      "properties": {
        "thirdPartyClaims": {
          "description": "Metadata about third party identity.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "AuthorizationInfo": {
      "id": "AuthorizationInfo",
      "description": "Authorization information for the operation.",
      "type": "object",
      "properties": {
        "resource": {
          "description": "The resource being accessed, as a REST-style string. For example:\n\n    bigquery.googleapis.com\/projects\/PROJECTID\/datasets\/DATASETID",
          "type": "string"
        },
        "permission": {
          "description": "The required IAM permission.",
          "type": "string"
        },
        "granted": {
          "description": "Whether or not authorization for `resource` and `permission`\nwas granted.",
          "type": "boolean"
        },
        "authorizationLoggingOptions": {
          "$ref": "AuthorizationLoggingOptions"
        },
        "resourceAttributes": {
          "description": "Resource attributes used in IAM condition evaluation. This field contains\nresource attributes like resource type and resource name.\n\nTo get the whole view of the attributes used in IAM\ncondition evaluation, the user must also look into\n`AuditLog.request_metadata.request_attributes`.",
          "$ref": "Resource"
        }
      }
    },
    "AuthorizationLoggingOptions": {
      "id": "AuthorizationLoggingOptions",
      "description": "Authorization-related information used by Cloud Audit Logging.",
      "type": "object",
      "properties": {
        "permissionType": {
          "description": "The type of the permission that was checked.",
          "enumDescriptions": [
            "Default. Should not be used.",
            "A read of admin (meta) data.",
            "A write of admin (meta) data.",
            "A read of standard data.",
            "A write of standard data."
          ],
          "type": "string",
          "enum": [
            "PERMISSION_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "ADMIN_WRITE",
            "DATA_READ",
            "DATA_WRITE"
          ]
        }
      }
    },
    "Resource": {
      "id": "Resource",
      "description": "This message defines core attributes for a resource. A resource is an\naddressable (named) entity provided by the destination service. For\nexample, a file stored on a network storage service.",
      "type": "object",
      "properties": {
        "service": {
          "description": "The name of the service that this resource belongs to, such as\n`pubsub.googleapis.com`. The service may be different from the DNS\nhostname that actually serves the request.",
          "type": "string"
        },
        "name": {
          "description": "The stable identifier (name) of a resource on the `service`. A resource\ncan be logically identified as \"\/\/{resource.service}\/{resource.name}\".\nThe differences between a resource name and a URI are:\n\n*   Resource name is a logical identifier, independent of network\n    protocol and API version. For example,\n    `\/\/pubsub.googleapis.com\/projects\/123\/topics\/news-feed`.\n*   URI often includes protocol and version information, so it can\n    be used directly by applications. For example,\n    `https:\/\/pubsub.googleapis.com\/v1\/projects\/123\/topics\/news-feed`.\n\nSee https:\/\/cloud.google.com\/apis\/design\/resource_names for details.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource. The scheme is platform-specific because\ndifferent platforms define their resources differently.",
          "type": "string"
        },
        "labels": {
          "description": "The labels or tags on the resource, such as AWS resource tags and\nKubernetes resource labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RequestMetadata": {
      "id": "RequestMetadata",
      "description": "Metadata about the request.",
      "type": "object",
      "properties": {
        "callerIp": {
          "description": "The IP address of the caller.\nFor caller from internet, this will be public IPv4 or IPv6 address.\nFor caller from a Compute Engine VM with external IP address, this\nwill be the VM's external IP address. For caller from a Compute\nEngine VM without external IP address, if the VM is in the same\norganization (or project) as the accessed resource, `caller_ip` will\nbe the VM's internal IPv4 address, otherwise the `caller_ip` will be\nredacted to \"gce-internal-ip\".\nSee https:\/\/cloud.google.com\/compute\/docs\/vpc\/ for more information.",
          "type": "string"
        },
        "callerSuppliedUserAgent": {
          "description": "The user agent of the caller.\nThis information is not authenticated and should be treated accordingly.\nFor example:\n\n+   `google-api-python-client\/1.4.0`:\n    The request was made by the Google API client for Python.\n+   `Cloud SDK Command Line Tool apitools-client\/1.0 gcloud\/0.9.62`:\n    The request was made by the Google Cloud SDK CLI (gcloud).\n+   `AppEngine-Google; (+http:\/\/code.google.com\/appengine; appid:\ns~my-project`:\n    The request was made from the `my-project` App Engine app.\nNOLINT",
          "type": "string"
        },
        "callerNetwork": {
          "description": "The network of the caller.\nSet only if the network host project is part of the same GCP organization\n(or project) as the accessed resource.\nSee https:\/\/cloud.google.com\/compute\/docs\/vpc\/ for more information.\nThis is a scheme-less URI full resource name. For example:\n\n    \"\/\/compute.googleapis.com\/projects\/PROJECT_ID\/global\/networks\/NETWORK_ID\"",
          "type": "string"
        },
        "callerInternalGceVnid": {
          "type": "string"
        },
        "callerGceNetworkProjectNumber": {
          "type": "string"
        },
        "callerIsGceClient": {
          "description": "True if the caller is from Compute Engine, such as from a VM or\nfrom an on-prem host behind a VPN.",
          "type": "boolean"
        },
        "requestAttributes": {
          "description": "Request attributes used in IAM condition evaluation. This field contains\nrequest attributes like request time and access levels associated with\nthe request.\n\n\nTo get the whole view of the attributes used in IAM\ncondition evaluation, the user must also look into\n`AuditLog.authentication_info.resource_attributes`.",
          "$ref": "Request"
        },
        "destinationAttributes": {
          "description": "The destination of a network activity, such as accepting a TCP connection.\nIn a multi hop network activity, the destination represents the receiver of\nthe last hop. Only two fields are used in this message, Peer.port and\nPeer.ip. These fields are optionally populated by those services utilizing\nthe IAM condition feature.",
          "$ref": "Peer"
        }
      }
    },
    "Request": {
      "id": "Request",
      "description": "This message defines attributes for an HTTP request. If the actual\nrequest is not an HTTP request, the runtime system should try to map\nthe actual request to an equivalent HTTP request.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID for a request, which can be propagated to downstream\nsystems. The ID should have low probability of collision\nwithin a single day for a specific service.",
          "type": "string"
        },
        "method": {
          "description": "The HTTP request method, such as `GET`, `POST`.",
          "type": "string"
        },
        "headers": {
          "description": "The HTTP request headers. If multiple headers share the same key, they\nmust be merged according to the HTTP spec. All header keys must be\nlowercased, because HTTP header keys are case-insensitive.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "path": {
          "description": "The HTTP URL path.",
          "type": "string"
        },
        "host": {
          "description": "The HTTP request `Host` header value.",
          "type": "string"
        },
        "scheme": {
          "description": "The HTTP URL scheme, such as `http` and `https`.",
          "type": "string"
        },
        "query": {
          "description": "The HTTP URL query in the format of `name1=value`&name2=value2`, as it\nappears in the first line of the HTTP request. No decoding is performed.",
          "type": "string"
        },
        "fragment": {
          "description": "The HTTP URL fragment. No URL decoding is performed.",
          "type": "string"
        },
        "time": {
          "description": "The timestamp when the `destination` service receives the first byte of\nthe request.",
          "type": "string",
          "format": "google-datetime"
        },
        "size": {
          "description": "The HTTP request size in bytes. If unknown, it must be -1.",
          "type": "string",
          "format": "int64"
        },
        "protocol": {
          "description": "The network protocol used with the request, such as \"http\/1.1\",\n\"spdy\/3\", \"h2\", \"h2c\", \"webrtc\", \"tcp\", \"udp\", \"quic\". See\nhttps:\/\/www.iana.org\/assignments\/tls-extensiontype-values\/tls-extensiontype-values.xhtml#alpn-protocol-ids\nfor details.",
          "type": "string"
        },
        "reason": {
          "description": "A special parameter for request reason. It is used by security systems\nto associate auditing information with a request.",
          "type": "string"
        },
        "auth": {
          "description": "The request authentication. May be absent for unauthenticated requests.\nDerived from the HTTP request `Authorization` header or equivalent.",
          "$ref": "Auth"
        }
      }
    },
    "Auth": {
      "id": "Auth",
      "description": "This message defines request authentication attributes. Terminology is\nbased on the JSON Web Token (JWT) standard, but the terms also\ncorrelate to concepts in other standards.",
      "type": "object",
      "properties": {
        "principal": {
          "description": "The authenticated principal. Reflects the issuer (`iss`) and subject\n(`sub`) claims within a JWT. The issuer and subject should be `\/`\ndelimited, with `\/` percent-encoded within the subject fragment. For\nGoogle accounts, the principal format is:\n\"https:\/\/accounts.google.com\/{id}\"",
          "type": "string"
        },
        "audiences": {
          "description": "The intended audience(s) for this authentication information. Reflects\nthe audience (`aud`) claim within a JWT. The audience\nvalue(s) depends on the `issuer`, but typically include one or more of\nthe following pieces of information:\n\n*  The services intended to receive the credential such as\n   [\"pubsub.googleapis.com\", \"storage.googleapis.com\"]\n*  A set of service-based scopes. For example,\n   [\"https:\/\/www.googleapis.com\/auth\/cloud-platform\"]\n*  The client id of an app, such as the Firebase project id for JWTs\n   from Firebase Auth.\n\nConsult the documentation for the credential issuer to determine the\ninformation provided.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "presenter": {
          "description": "The authorized presenter of the credential. Reflects the optional\nAuthorized Presenter (`azp`) claim within a JWT or the\nOAuth client id. For example, a Google Cloud Platform client id looks\nas follows: \"123456789012.apps.googleusercontent.com\".",
          "type": "string"
        },
        "claims": {
          "description": "Structured claims presented with the credential. JWTs include\n`{key: value}` pairs for standard and private claims. The following\nis a subset of the standard required and optional claims that would\ntypically be presented for a Google-based JWT:\n\n   {'iss': 'accounts.google.com',\n    'sub': '113289723416554971153',\n    'aud': ['123456789012', 'pubsub.googleapis.com'],\n    'azp': '123456789012.apps.googleusercontent.com',\n    'email': 'jsmith@example.com',\n    'iat': 1353601026,\n    'exp': 1353604926}\n\nSAML assertions are similarly specified, but with an identity provider\ndependent structure.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "accessLevels": {
          "description": "A list of access level resource names that allow resources to be\naccessed by authenticated requester. It is part of Secure GCP processing\nfor the incoming request. An access level string has the format:\n\"\/\/{api_service_name}\/accessPolicies\/{policy_id}\/accessLevels\/{short_name}\"\n\nExample:\n\"\/\/accesscontextmanager.googleapis.com\/accessPolicies\/MY_POLICY_ID\/accessLevels\/MY_LEVEL\"",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Peer": {
      "id": "Peer",
      "description": "This message defines attributes for a node that handles a network request.\nThe node can be either a service or an application that sends, forwards,\nor receives the request. Service peers should fill in the `service`,\n`principal`, and `labels` as appropriate.",
      "type": "object",
      "properties": {
        "ip": {
          "description": "The IP address of the peer.",
          "type": "string"
        },
        "port": {
          "description": "The network port of the peer.",
          "type": "string",
          "format": "int64"
        },
        "service": {
          "description": "The canonical service name of the peer.\n\nNOTE: different systems may have different service naming schemes.",
          "type": "string"
        },
        "labels": {
          "description": "The labels associated with the peer.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "principal": {
          "description": "The identity of this peer. Similar to `Request.auth.principal`, but\nrelative to the peer instead of the request. For example, the\nidenity associated with a load balancer that forwared the request.",
          "type": "string"
        },
        "regionCode": {
          "description": "The CLDR country\/region code associated with the above IP address.\nIf the IP address is private, the `region_code` should reflect the\nphysical location where this peer is running.",
          "type": "string"
        }
      }
    }
  },
  "resources": {
    "services": {
      "methods": {
        "allocateQuota": {
          "id": "servicecontrol.services.allocateQuota",
          "path": "v1/services/{serviceName}:allocateQuota",
          "flatPath": "v1/services/{serviceName}:allocateQuota",
          "httpMethod": "POST",
          "parameters": {
            "serviceName": {
              "description": "Name of the service as specified in the service configuration. For example,\n`\"pubsub.googleapis.com\"`.\n\nSee google.api.Service for the definition of a service name.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "serviceName"
          ],
          "request": {
            "$ref": "AllocateQuotaRequest"
          },
          "response": {
            "$ref": "AllocateQuotaResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/servicecontrol"
          ],
          "description": "Attempts to allocate quota for the specified consumer. It should be called\nbefore the operation is executed.\n\nThis method requires the `servicemanagement.services.quota`\npermission on the specified service. For more information, see\n[Cloud IAM](https:\/\/cloud.google.com\/iam).\n\n**NOTE:** The client **must** fail-open on server errors `INTERNAL`,\n`UNKNOWN`, `DEADLINE_EXCEEDED`, and `UNAVAILABLE`. To ensure system\nreliability, the server may inject these errors to prohibit any hard\ndependency on the quota functionality."
        },
        "releaseQuota": {
          "id": "servicecontrol.services.releaseQuota",
          "path": "v1/services/{serviceName}:releaseQuota",
          "flatPath": "v1/services/{serviceName}:releaseQuota",
          "httpMethod": "POST",
          "parameters": {
            "serviceName": {
              "description": "Name of the service as specified in the service configuration. For example,\n`\"pubsub.googleapis.com\"`.\n\nSee google.api.Service for the definition of a service name.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "serviceName"
          ],
          "request": {
            "$ref": "ReleaseQuotaRequest"
          },
          "response": {
            "$ref": "ReleaseQuotaResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/servicecontrol"
          ],
          "description": "Releases previously allocated quota done through AllocateQuota method.\n\nThis method requires the `servicemanagement.services.quota`\npermission on the specified service. For more information, see\n[Cloud IAM](https:\/\/cloud.google.com\/iam).\n\n\n**NOTE:** The client **must** fail-open on server errors `INTERNAL`,\n`UNKNOWN`, `DEADLINE_EXCEEDED`, and `UNAVAILABLE`. To ensure system\nreliability, the server may inject these errors to prohibit any hard\ndependency on the quota functionality."
        },
        "startReconciliation": {
          "id": "servicecontrol.services.startReconciliation",
          "path": "v1/services/{serviceName}:startReconciliation",
          "flatPath": "v1/services/{serviceName}:startReconciliation",
          "httpMethod": "POST",
          "parameters": {
            "serviceName": {
              "description": "Name of the service as specified in the service configuration. For example,\n`\"pubsub.googleapis.com\"`.\n\nSee google.api.Service for the definition of a service name.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "serviceName"
          ],
          "request": {
            "$ref": "StartReconciliationRequest"
          },
          "response": {
            "$ref": "StartReconciliationResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/servicecontrol"
          ],
          "description": "Unlike rate quota, allocation quota does not get refilled periodically.\nSo, it is possible that the quota usage as seen by the service differs from\nwhat the One Platform considers the usage is. This is expected to happen\nonly rarely, but over time this can accumulate. Services can invoke\nStartReconciliation and EndReconciliation to correct this usage drift, as\ndescribed below:\n1. Service sends StartReconciliation with a timestamp in future for each\n   metric that needs to be reconciled. The timestamp being in future allows\n   to account for in-flight AllocateQuota and ReleaseQuota requests for the\n   same metric.\n2. One Platform records this timestamp and starts tracking subsequent\n   AllocateQuota and ReleaseQuota requests until EndReconciliation is\n   called.\n3. At or after the time specified in the StartReconciliation, service\n   sends EndReconciliation with the usage that needs to be reconciled to.\n4. One Platform adjusts its own record of usage for that metric to the\n   value specified in EndReconciliation by taking in to account any\n   allocation or release between StartReconciliation and EndReconciliation.\n\nSignals the quota controller that the service wants to perform a usage\nreconciliation as specified in the request.\n\nThis method requires the `servicemanagement.services.quota`\npermission on the specified service. For more information, see\n[Google Cloud IAM](https:\/\/cloud.google.com\/iam)."
        },
        "endReconciliation": {
          "id": "servicecontrol.services.endReconciliation",
          "path": "v1/services/{serviceName}:endReconciliation",
          "flatPath": "v1/services/{serviceName}:endReconciliation",
          "httpMethod": "POST",
          "parameters": {
            "serviceName": {
              "description": "Name of the service as specified in the service configuration. For example,\n`\"pubsub.googleapis.com\"`.\n\nSee google.api.Service for the definition of a service name.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "serviceName"
          ],
          "request": {
            "$ref": "EndReconciliationRequest"
          },
          "response": {
            "$ref": "EndReconciliationResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/servicecontrol"
          ],
          "description": "Signals the quota controller that service ends the ongoing usage\nreconciliation.\n\nThis method requires the `servicemanagement.services.quota`\npermission on the specified service. For more information, see\n[Google Cloud IAM](https:\/\/cloud.google.com\/iam)."
        },
        "check": {
          "id": "servicecontrol.services.check",
          "path": "v1/services/{serviceName}:check",
          "flatPath": "v1/services/{serviceName}:check",
          "httpMethod": "POST",
          "parameters": {
            "serviceName": {
              "description": "The service name as specified in its service configuration. For example,\n`\"pubsub.googleapis.com\"`.\n\nSee\n[google.api.Service](https:\/\/cloud.google.com\/service-management\/reference\/rpc\/google.api#google.api.Service)\nfor the definition of a service name.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "serviceName"
          ],
          "request": {
            "$ref": "CheckRequest"
          },
          "response": {
            "$ref": "CheckResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/servicecontrol"
          ],
          "description": "Checks whether an operation on a service should be allowed to proceed\nbased on the configuration of the service and related policies. It must be\ncalled before the operation is executed.\n\nIf feasible, the client should cache the check results and reuse them for\n60 seconds. In case of any server errors, the client should rely on the\ncached results for much longer time to avoid outage.\nWARNING: There is general 60s delay for the configuration and policy\npropagation, therefore callers MUST NOT depend on the `Check` method having\nthe latest policy information.\n\nNOTE: the CheckRequest has the size limit of 64KB.\n\nThis method requires the `servicemanagement.services.check` permission\non the specified service. For more information, see\n[Cloud IAM](https:\/\/cloud.google.com\/iam)."
        },
        "report": {
          "id": "servicecontrol.services.report",
          "path": "v1/services/{serviceName}:report",
          "flatPath": "v1/services/{serviceName}:report",
          "httpMethod": "POST",
          "parameters": {
            "serviceName": {
              "description": "The service name as specified in its service configuration. For example,\n`\"pubsub.googleapis.com\"`.\n\nSee\n[google.api.Service](https:\/\/cloud.google.com\/service-management\/reference\/rpc\/google.api#google.api.Service)\nfor the definition of a service name.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "serviceName"
          ],
          "request": {
            "$ref": "ReportRequest"
          },
          "response": {
            "$ref": "ReportResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/servicecontrol"
          ],
          "description": "Reports operation results to Google Service Control, such as logs and\nmetrics. It should be called after an operation is completed.\n\nIf feasible, the client should aggregate reporting data for up to 5\nseconds to reduce API traffic. Limiting aggregation to 5 seconds is to\nreduce data loss during client crashes. Clients should carefully choose\nthe aggregation time window to avoid data loss risk more than 0.01%\nfor business and compliance reasons.\n\nNOTE: the ReportRequest has the size limit of 1MB.\n\nThis method requires the `servicemanagement.services.report` permission\non the specified service. For more information, see\n[Google Cloud IAM](https:\/\/cloud.google.com\/iam)."
        }
      }
    }
  },
  "basePath": ""
}